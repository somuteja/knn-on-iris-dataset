from sklearn.datasets import load_iris
import numpy as np

iris_dataset = load_iris()

from sklearn.model_selection import train_test_split 

X_train,X_test,y_train,y_test = train_test_split(iris_dataset['data'],iris_dataset['target']
                                                ,random_state = 5)

from sklearn.neighbors import KNeighborsClassifier

X_new = np.array([[4.5,3.1,1.4,0.3]]) #we will predict for these values for different values of k

#model prediction of X_new for various values of k
for i in range(1,10):
    knn = KNeighborsClassifier(n_neighbors = i)
    knn.fit(X_train,y_train)
    prediction = knn.predict(X_new)
    print("Prediction for k-nn classifier when k = {}".format(i))
    print(":{}/n".format(iris_dataset['target_names'][prediction]))

#model evaluation for various values of k
for i in range(1,10):
    knn = KNeighborsClassifier(n_neighbors = i)
    knn.fit(X_train,y_train)
    y_pred = knn.predict(X_test)
    print("Accuracy of the predictor when k = {} is {:.3f}".format(i,knn.score(X_test,y_test)))
